var Pixelizer;(function(){class t{constructor(t,i,e){if(t*i*4!==e.length){throw new Error("Length of data doesn't match width and height")}this.width=t;this.height=i;this.data=e}getPixelIndex(t,i){t=Math.min(Math.max(0,t),this.width-1);i=Math.min(Math.max(0,i),this.height-1);return(this.width*i+t)*4}}class s{constructor(t,i,e){this.oldPixels=t;this.newPixels=i;this.options=e;this.labels=new r(t.width,t.height,e.pixelSize);this.permutations=[{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-1,y:0},{x:0,y:0},{x:1,y:0},{x:-1,y:1},{x:0,y:1},{x:1,y:1}]}cluster(){for(let t=0;t<this.options.maxIteration;t++){let t=this.map();this.reduce();let i=t/this.oldPixels.width/this.oldPixels.height;if(i<this.options.clusterThreshold){break}}return this}getPixels(){return this.newPixels}map(){let t=0;for(let r=0;r<this.oldPixels.width;r++){for(let l=0;l<this.oldPixels.height;l++){let s;let h=Number.MAX_VALUE;for(let t=0;t<this.permutations.length;t++){let i=Math.floor(r/this.options.pixelSize)+this.permutations[t].x;let e=Math.floor(l/this.options.pixelSize)+this.permutations[t].y;if(i>=0&&i<this.newPixels.width&&e>=0&&e<this.newPixels.height){let t=this.pixelDifference(r,l,i,e);if(t<h){h=t;s={x:i,y:e}}}}this.labels.setLabel(r,l,s.x,s.y);t+=this.labels.getLabel(r,l).changed?1:0}}return t}reduce(){for(let i=0;i<this.newPixels.width;i++){for(let t=0;t<this.newPixels.height;t++){let s=this.labels.getList(i,t);let h=this.newPixels.getPixel(i,t);if(s.length>0){h=m.scale(h,1/2);for(let e=0;e<s.length;e++){let t=s[e];let i=this.oldPixels.getPixel(t.x,t.y);h=m.add(h,m.scale(i,1/s.length/2))}}this.newPixels.setPixel(i,t,h)}}}pixelDifference(t,i,e,s){let h=this.options.pixelSize;let l=this.options.colorDistRatio;t=Math.max(0,Math.min(t,this.oldPixels.width-1));i=Math.max(0,Math.min(i,this.oldPixels.height-1));e=Math.max(0,Math.min(e,this.newPixels.width-1));s=Math.max(0,Math.min(s,this.newPixels.height-1));let r=this.oldPixels.getPixel(t,i);let a=this.newPixels.getPixel(e,s);let x=m.difference(r,a);let p=e*h+(h-1)/2;let d=s*h+(h-1)/2;let o=Math.abs(t-p);let n=Math.abs(i-d);let u=o*o+n*n;let g=Math.sqrt(u/(h+1)/(h+1));return l*x+(1-l)*g}}class h{constructor(t){let i=Math.min(Math.max(0,t.r/255),1);let e=Math.min(Math.max(0,t.g/255),1);let s=Math.min(Math.max(0,t.b/255),1);i=i<.04045?i/12.92:Math.pow((i+.055)/1.055,2.4);e=e<.04045?e/12.92:Math.pow((e+.055)/1.055,2.4);s=s<.04045?s/12.92:Math.pow((s+.055)/1.055,2.4);this.x=.4124564*i+.3575761*e+.1804375*s;this.y=.2126729*i+.7151522*e+.072175*s;this.z=.0193339*i+.119192*e+.9503041*s;this.a=t.a/255}}class l{constructor(t){const i=.008856;const e=903.3;let s=t.x/.95047;let h=t.y/1;let l=t.z/1.08883;let r=s>i?Math.pow(s,1/3):(e*s+16)/116;let a=h>i?Math.pow(h,1/3):(e*h+16)/116;let o=l>i?Math.pow(l,1/3):(e*l+16)/116;this.l=116*a-16;this.a=500*(r-a);this.b=200*(a-o);this.alpha=t.a*255}}class m{constructor(t,i,e,s){this.r=Math.min(Math.max(0,t),255);this.g=Math.min(Math.max(0,i),255);this.b=Math.min(Math.max(0,e),255);this.a=Math.min(Math.max(0,s),255);this.labalpha=new l(new h(this))}copy(){return new m(this.r,this.g,this.b,this.a)}toString(){return"rgba("+this.r+", "+this.g+", "+this.b+", "+this.a+")"}toLABAlpha(){return this.labalpha}static difference(t,i){let e=t.toLABAlpha();let s=i.toLABAlpha();let h=Math.abs(e.l-s.l);let l=Math.abs(e.a-s.a);let r=Math.abs(e.b-s.b);let a=Math.abs(e.alpha-s.alpha);return Math.sqrt(h*h+l*l+r*r+a*a)/355}static add(t,i){let e=t.r+i.r;let s=t.g+i.g;let h=t.b+i.b;let l=t.a+i.a;return new m(e,s,h,l)}static subtract(t,i){let e=t.r-i.r;let s=t.g-i.g;let h=t.b-i.b;let l=t.a-i.a;return new m(e,s,h,l)}static scale(t,i){let e=t.r*i;let s=t.g*i;let h=t.b*i;let l=t.a*i;return new m(e,s,h,l)}static zero(){return new m(0,0,0,0)}static length(t){return Math.sqrt(t.r*t.r+t.g*t.g+t.b*t.b+t.a*t.a)}}class r{constructor(t,i,h){this.oldWidth=t;this.oldHeight=i;this.size=h;this.newWidth=Math.ceil(this.oldWidth/this.size);this.newHeight=Math.ceil(this.oldHeight/this.size);this.labels=Array(this.oldWidth).fill().map(()=>Array(this.oldHeight));this.lists=Array(this.newWidth).fill().map(()=>Array(this.newHeight).fill().map(()=>Array(0)));for(let s=0;s<this.oldWidth;s++){for(let e=0;e<this.oldHeight;e++){let t=Math.floor(s/h);let i=Math.floor(e/h);this.labels[s][e]={x:t,y:i,changed:true};this.lists[t][i].push({x:s,y:e})}}}getLabel(t,i){t=Math.max(0,Math.min(t,this.oldWidth-1));i=Math.max(0,Math.min(i,this.oldHeight-1));return this.labels[t][i]}setLabel(i,e,t,s){i=Math.max(0,Math.min(i,this.oldWidth-1));e=Math.max(0,Math.min(e,this.oldHeight-1));t=Math.max(0,Math.min(t,this.newWidth-1));s=Math.max(0,Math.min(s,this.newHeight-1));let h=this.getLabel(i,e);let l={x:i,y:e};let r=this.lists[h.x][h.y].findIndex(t=>t.x==i&&t.y==e);if(r>-1){this.lists[h.x][h.y].splice(r,1);this.lists[t][s].push(l)}let a=h.x!==t||h.y!==s;this.labels[i][e]={x:t,y:s,changed:a}}getList(t,i){t=Math.max(0,Math.min(t,this.newWidth-1));i=Math.max(0,Math.min(i,this.newHeight-1));return this.lists[t][i]}}class i{constructor(){this.pixelSize=1;this.colorDistRatio=.5;this.clusterThreshold=.01;this.maxIteration=10;this.numberOfColors=128;return this}setPixelSize(t){this.pixelSize=t;return this}setColorDistRatio(t){this.colorDistRatio=Math.max(0,Math.min(t,1));return this}setClusterThreshold(t){this.clusterThreshold=Math.max(0,Math.min(t,1));return this}setMaxIteration(t){this.maxIteration=t;return this}setNumberOfColors(t){this.numberOfColors=parseInt(t);return this}}class a{constructor(t,i){this.pixels=t;this.options=i;this.colors=t.pixels;this.groups=[]}reduce(){if(this.options.numberOfColors<=0){return this.pixels}this.initGroups();while(this.groups.length<this.options.numberOfColors){this.splitGroups();let t=0;let i=2;while(t<1e5&&i>this.options.clusterThreshold){i=this.assignGroups();this.updateGroups();t++}}this.map();return this.pixels}initGroups(){this.groups.push({mean:m.zero(),sd:m.zero(),oldList:[],newList:[]})}assignGroups(){let t=0;for(let h=0;h<this.colors.length;h++){let e=Number.MAX_VALUE;let s=-1;for(let i=0;i<this.groups.length;i++){let t=m.difference(this.groups[i].mean,this.colors[h]);if(t<e){e=t;s=i}}this.groups[s].newList.push(this.colors[h]);if(this.groups[s].oldList.indexOf(this.colors[h])<0){t++}}for(let t=0;t<this.groups.length;t++){this.groups[t].oldList=this.groups[t].newList;this.groups[t].newList=[]}return t/this.colors.length}updateGroups(){for(let o=0;o<this.groups.length;o++){let e=m.zero();let s=0,h=0,l=0,r=0;let a=this.groups[o].oldList.length;for(let i=0;i<a;i++){let t=this.groups[o].oldList[i];e=m.add(e,m.scale(t,1/a));s+=t.r*t.r/a;h+=t.g*t.g/a;l+=t.b*t.b/a;r+=t.a*t.a/a}this.groups[o].mean=e;this.groups[o].sd=new m(Math.sqrt(Math.max(0,s-e.r*e.r)),Math.sqrt(Math.max(0,h-e.g*e.g)),Math.sqrt(Math.max(0,l-e.b*e.b)),Math.sqrt(Math.max(0,r-e.a*e.a)))}}splitGroups(){let i=-1;let e=null;for(let t=0;t<this.groups.length;t++){if(m.length(this.groups[t].sd)>=i){i=m.length(this.groups[t].sd);e=this.groups[t]}}this.groups.splice(this.groups.indexOf(e),1);this.groups.push({mean:m.subtract(e.mean,e.sd),sd:m.zero(),oldList:[],newList:[]});this.groups.push({mean:m.add(e.mean,e.sd),sd:m.zero(),oldList:[],newList:[]})}map(){for(let l=0;l<this.pixels.width;l++){for(let h=0;h<this.pixels.height;h++){let e=Number.MAX_VALUE;let s=this.pixels.getPixel(l,h);for(let i=0;i<this.groups.length;i++){let t=m.difference(this.pixels.getPixel(l,h),this.groups[i].mean);if(t<=e){e=t;s=this.groups[i].mean}}this.pixels.setPixel(l,h,s)}}}}class e{constructor(t,i){this.options=i;this.oldPixels=this.createPixels(t,1);this.newPixels=this.createPixels(t,i.pixelSize)}updateOptions(t){this.options=t;this.newPixels=this.createPixels(bitmap,t.pixelSize)}pixelize(){let t=new s(this.oldPixels,this.newPixels,this.options);t.cluster();let i=new a(t.getPixels(),this.options);let e=i.reduce();return e.toBitmap()}createPixels(t,i){let e=t.width;let s=t.height;let h=Math.floor(e/i);let l=Math.floor(s/i);return new o(h,l,i,t)}}class o{constructor(t,i,p,d){this.width=t;this.height=i;this.size=p;if(t*p>d.width){throw new Error("invalid width combination, width("+t+"), "+"size("+p+"), bitmap width("+d.width+")")}if(i*p>d.height){throw new Error("invalid height combination, height("+i+"), "+"size("+p+"), bitmap height("+d.height+")")}this.pixels=[];for(let x=0;x<this.width;x++){for(let n=0;n<this.height;n++){let l=0,r=0,a=0,o=0;for(let h=0;h<p;h++){for(let s=0;s<p;s++){let t=x*p+h;let i=n*p+s;let e=d.getPixelIndex(t,i);l+=d.data[e+0]/p/p;r+=d.data[e+1]/p/p;a+=d.data[e+2]/p/p;o+=d.data[e+3]/p/p}}this.pixels[n*t+x]=new m(l,r,a,o)}}}getPixel(t,i){if(t<0||t>this.width-1){throw new Error("x ("+t+") is not in bound")}if(i<0||i>this.height-1){throw new Error("y ("+i+") is not in bound")}return this.pixels[i*this.width+t]}setPixel(t,i,e){if(t<0||t>this.width-1){throw new Error("x ("+t+") is not in bound")}if(i<0||i>this.height-1){throw new Error("y ("+i+") is not in bound")}this.pixels[i*this.width+t]=e}toBitmap(){let s=[];for(let e=0;e<this.height;e++){for(let i=0;i<this.width;i++){let t=this.getPixel(i,e);s.push(t.r);s.push(t.g);s.push(t.b);s.push(t.a)}}return new t(this.width,this.height,s)}}e.Options=i;e.Bitmap=t;e.RGBA=m;Pixelizer=e})();