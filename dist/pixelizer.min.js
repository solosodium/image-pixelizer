/* pixelizer.min.js */
var Pixelizer=Pixelizer||{};Pixelizer.Config={isDebug:!0},Pixelizer.Log=function(){},Pixelizer.Log.debug=function(i){Pixelizer.Config.isDebug&&console.log("Pixelizer log: ",i)},Pixelizer.Log.throw=function(i){throw"Pixelizer exception: "+i},Pixelizer.Draw=function(i,t){this.options={},this.points=[],this.setOptions(t)},Pixelizer.Draw.prototype.start=function(i){this.points=[],this.points.push({pos:i,options:this.options})},Pixelizer.Draw.prototype.draw=function(i){this.points.push({pos:i,options:this.options})},Pixelizer.Draw.prototype.end=function(i){this.points.push({pos:i,options:this.options}),Pixelizer.Log.debug(this.points),this.points=[]},Pixelizer.Draw.prototype.setOptions=function(i){this.options={color:i.color,size:i.size}},function(){Pixelizer.Log;function n(i,t){var e=i.getBoundingClientRect();return{x:t.clientX-e.left,y:t.clientY-e.top}}Pixelizer.Input=function(t,e){this.isPointer=!1,t.addEventListener("mousedown",function(i){this.isPointer=!0,e.start(n(t,i))}),t.addEventListener("mouseup",function(i){this.isPointer&&(this.isPointer=!1,e.end(n(t,i)))}),t.addEventListener("mouseleave",function(i){this.isPointer&&(this.isPointer=!1,e.end(n(t,i)))}),t.addEventListener("mousemove",function(i){this.isPointer&&(e.draw(n(t,i)),Pixelizer.Log.debug(n(t,i)))}),t.addEventListener("touchstart",function(i){this.isPointer=!0}),t.addEventListener("touchend",function(i){this.isPointer=!1}),t.addEventListener("touchmove",function(i){this.isPointer})}}(),Pixelizer.Renderer=function(i,t){this.canvas=document.getElementById(i);var e=new Pixelizer.Draw(canvas,t);new Pixelizer.Input(canvas,e)};